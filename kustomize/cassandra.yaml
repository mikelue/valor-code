---
apiVersion: v1
kind: Service
metadata:
  name: cassandra
  labels:
    app: cassandra
spec:
  clusterIP: None
  ports:
    - name: cql
      port: 9042
      targetPort: cql
    - name: intra-node
      port: 7000
      targetPort: intra-node
    - name: jmx
      port: 7199
      targetPort: jmx
  selector:
    app: cassandra
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cassandra
  labels:
    app: cassandra
spec:
  serviceName: cassandra
  replicas: 2
  selector:
    matchLabels:
      app: cassandra
  template:
    metadata:
      labels:
        app: cassandra
    spec:
      terminationGracePeriodSeconds: 1800
      containers:
        - name: cassandra
          image: cassandra:4.0
          imagePullPolicy: Always
          ports:
            - name: intra-node
              containerPort: 7000
            - name: tls-intra-node
              containerPort: 7001
            - name: jmx
              containerPort: 7199
            - name: cql
              containerPort: 9042
          resources:
            limits:
              cpu: "1"
              memory: 1536Gi
            requests:
              cpu: "1"
              memory: 512Mi
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - /opt/cassandra/bin/nodetool drain
          env:
            - name: MAX_HEAP_SIZE
              value: 1G
            - name: HEAP_NEWSIZE
              value: 128M
            - name: CASSANDRA_SEEDS
              value: "cassandra-0.cassandra.default.svc.cluster.local"
            - name: CASSANDRA_CLUSTER_NAME
              value: "K8Demo"
            - name: CASSANDRA_DC
              value: "DC1-K8Demo"
            - name: CASSANDRA_RACK
              value: "Rack1-K8Demo"
            - name: CASSANDRA_ENDPOINT_SNITCH
              value: "GossipingPropertyFileSnitch"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            # This is used to set prefix of ip address for CASSANDRA_BROADCAST_RPC_ADDRESS by poname-<N>
            - name: BROADCAST_IP_PREFIX
              value: 192.168.6.4
          command: [
            "/bin/sh", "-c",
            "SUFFIX=$(echo $HOSTNAME | sed -Ee \"s/.+-([[:digit:]]+)$/\\\\1/\") CASSANDRA_BROADCAST_RPC_ADDRESS=${BROADCAST_IP_PREFIX}${SUFFIX} docker-entrypoint.sh cassandra -f"
          ]
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - /opt/cassandra/bin/nodetool info >/dev/null
            initialDelaySeconds: 15
            timeoutSeconds: 5
          # These volume mounts are persistent. They are like inline claims,
          # but not exactly because the names need to match exactly one of
          # the stateful pod volumes.
          volumeMounts:
            - name: cassandra-data
              mountPath: /cassandra_data
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these in production until ssd GCEPersistentDisk or other ssd pd
  volumeClaimTemplates:
    - metadata:
        name: cassandra-data
        labels:
          app: cassandra
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: standard
        resources:
          requests:
            storage: 1Gi
